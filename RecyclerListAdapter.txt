#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != "")package ${PACKAGE_NAME}#end

import androidx.recyclerview.widget.RecyclerView
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.recyclerview.widget.DiffUtil
import androidx.recyclerview.widget.ListAdapter

#parse("File Header.java")
class ${NAME}(private val interaction: Interaction? = null) : 
  ListAdapter<${Model_Class}, ${ViewHolder_Class}>(DiffUtilCallback()){

 class DiffUtilCallback : DiffUtil.ItemCallback<${Model_Class}>() {
        override fun areItemsTheSame(oldItem: ${Model_Class}, newItem: ${Model_Class}): Boolean {
            TODO("not implemented")
        }

        override fun areContentsTheSame(oldItem: ${Model_Class}, newItem: ${Model_Class}): Boolean {
            TODO("not implemented")
        }
    }
  
  override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ${ViewHolder_Class} {

      return ${ViewHolder_Class}(
          LayoutInflater.from(parent.context).inflate(
              R.layout.${Item_Layout_ID},
              parent,
              false
          ),
          interaction
      )
  }

  override fun onBindViewHolder(holder: ${ViewHolder_Class}, position: Int) {
      getItem(position).let { holder.bind(it) }
  }


  class ${ViewHolder_Class}
  constructor(
      itemView: View,
      private val interaction: Interaction?
  ) : RecyclerView.ViewHolder(itemView){

      fun bind(item: ${Model_Class}) = with(itemView) {
          itemView.setOnClickListener {
              interaction?.onItemSelected(adapterPosition, item)
          }

          TODO("bind view with data")
      }
  }

  interface Interaction {
      fun onItemSelected(position: Int, item: ${Model_Class})
  }
}

